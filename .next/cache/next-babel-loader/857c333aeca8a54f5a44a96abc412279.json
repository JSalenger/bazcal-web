{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\rsale\\\\Documents\\\\SSB\\\\components\\\\personalTable.js\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\nvar item_cache = {};\n\nfunction formatNumber(number) {\n  if (number >= 1000000) {\n    return formatter.format(round(number / 1000000, 2)) + 'M';\n  } else if (number >= 1000) {\n    return formatter.format(round(number / 1000, 2)) + 'K';\n  } else {\n    return round(number, 2);\n  }\n} // posts will be populated at build time by getStaticProps()\n\n\nfunction PersonalTable(_ref) {\n  var _this = this;\n\n  var bazaarItems = _ref.bazaarItems;\n  return __jsx(Table, {\n    celled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Name\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Quantity\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Invested\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Estimated Profit\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Gradient\"))), __jsx(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, bazaarItems.map(function (item) {\n    return __jsx(Table.Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, __jsx(Label, {\n      ribbon: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, item.name)), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, item.evolume, \" \"), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, item.invested), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, formatNumber(item.eprofit), \" ( \", item.pprofit, \"% ) \"), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, item.gradient < 0 ? 'Product sell value decreasing' : 'Product sell value increasing'));\n  })));\n}\n\n_c = PersonalTable;\n\nfunction advise(balance) {\n  var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n  var include_stablity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  //console.log(advise);\n  var unsorted = [];\n\n  for (var product_name in item_cache) {\n    var product = item_cache[product_name]; //console.log(product);\n\n    var profit = product.sell * 0.99 - product.buy;\n    var tvolume = Math.min(product.volume, product.svolume) / 10080 * time;\n    var evolume = Math.floor(limit(tvolume, 0, balance / product.buy));\n    var eprofit = evolume * profit;\n    unsorted.push({\n      'name': product_name,\n      'evolume': evolume,\n      'invested': (product.buy * evolume).toFixed(2),\n      'pinvested': (product.buy * evolume * 100 / balance).toFixed(1),\n      'eprofit': eprofit.toFixed(2),\n      'pprofit': (profit / product.buy * 100).toFixed(1),\n      'gradient': product.sell - product.sell_ema\n    });\n  }\n\n  var sorted = unsorted.sort(function (a, b) {\n    return b.eprofit - a.eprofit;\n  }); //console.log(sorted);\n  //console.log(\"Length \" + sorted.length);\n\n  if (include_stablity) return sorted.filter(function (item) {\n    return item_cache[item.name].buy > item_cache[item.name].buy_ema && item_cache[item.name].sell > item_cache[item.name].sell_ema;\n  }).slice(0, count); //console.log(\"Length \" + sorted.length);\n  //console.log(sorted.slice(0, 6));\n\n  return sorted.slice(0, count);\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var api_res, json, prettyNames_res, nameJson, items, buy_point, sell_point, _iterator, _step, item, pre_b_ema, pre_s_ema, pre_b, pre_s, time, bazaarItems;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.hypixel.net/skyblock/bazaar?key=92e1a16e-382e-4840-b482-7966d24f2c1a\");\n\n          case 2:\n            api_res = _context.sent;\n            _context.next = 5;\n            return api_res.json();\n\n          case 5:\n            json = _context.sent;\n            _context.next = 8;\n            return fetch(\"./prettyNames.json\");\n\n          case 8:\n            prettyNames_res = _context.sent;\n            _context.next = 11;\n            return prettyNames_res.json();\n\n          case 11:\n            nameJson = _context.sent;\n            // By returning { props: posts }, the Blog component\n            // will receive `posts` as a prop at build time\n            //console.log(json['products']['INK_SACK:3']['sell_summary'][0]['pricePerUnit']);\n            items = Object.keys(json['products']).map(function (key) {\n              if (key === 'ENCHANTED_CARROT_ON_A_STICK') return {\n                'name': \"broken\",\n                'buy': 1,\n                'sell': 1,\n                'volume': 1,\n                'svolume': 1\n              };\n              return {\n                'name': nameJson[key]['name'],\n                'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\n                'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\n                'volume': json['products'][key]['quick_status']['buyMovingWeek'],\n                'svolume': json['products'][key]['quick_status']['sellMovingWeek']\n              };\n            });\n            buy_point = [];\n            sell_point = [];\n            _iterator = _createForOfIteratorHelper(items);\n            _context.prev = 16;\n\n            _iterator.s();\n\n          case 18:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 25;\n              break;\n            }\n\n            item = _step.value;\n\n            if (!(item.name === \"ENCHANTED_CARROT_ON_A_STICK\")) {\n              _context.next = 22;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 23);\n\n          case 22:\n            //console.log(item.buy);\n            if (!item_cache[item.name]) {\n              item_cache[item.name] = {\n                buy: item.buy,\n                sell: item.sell,\n                volume: item.volume,\n                svolume: item.svolume,\n                buy_ema: item.buy,\n                sell_ema: item.sell\n              };\n            } else {\n              pre_b_ema = item_cache[item.name].buy_ema;\n              pre_s_ema = item_cache[item.name].sell_ema;\n              pre_b = item_cache[item.name].buy;\n              pre_s = item_cache[item.name].sell;\n              item_cache[item.name].buy = item.buy;\n              item_cache[item.name].sell = item.sell;\n              item_cache[item.name].volume = item.volume;\n              item_cache[item.name].svolume = item.svolume;\n              item_cache[item.name].buy_ema = item.buy * k + pre_b_ema * (1 - k);\n              item_cache[item.name].sell_ema = item.sell * k + pre_s_ema * (1 - k);\n              if (pre_b <= pre_b_ema && item.buy > item_cache[item.name].buy_ema) buy_point.push(item.name);\n              if (pre_s >= pre_s_ema && item.sell < item_cache[item.name].sell_ema) sell_point.push(item.name);\n            }\n\n          case 23:\n            _context.next = 18;\n            break;\n\n          case 25:\n            _context.next = 30;\n            break;\n\n          case 27:\n            _context.prev = 27;\n            _context.t0 = _context[\"catch\"](16);\n\n            _iterator.e(_context.t0);\n\n          case 30:\n            _context.prev = 30;\n\n            _iterator.f();\n\n            return _context.finish(30);\n\n          case 33:\n            time = 15;\n            bazaarItems = advise(100000, 6, Number.isNaN(time) ? 15 : time, false);\n            return _context.abrupt(\"return\", {\n              props: {\n                bazaarItems: bazaarItems\n              }\n            });\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[16, 27, 30, 33]]);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\nexport default PersonalTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalTable\");","map":{"version":3,"sources":["C:/Users/rsale/Documents/SSB/components/personalTable.js"],"names":["React","Icon","Label","Menu","Table","item_cache","formatNumber","number","formatter","format","round","PersonalTable","bazaarItems","map","item","name","evolume","invested","eprofit","pprofit","gradient","advise","balance","count","time","include_stablity","unsorted","product_name","product","profit","sell","buy","tvolume","Math","min","volume","svolume","floor","limit","push","toFixed","sell_ema","sorted","sort","a","b","filter","buy_ema","slice","getStaticProps","fetch","api_res","json","prettyNames_res","nameJson","items","Object","keys","key","buy_point","sell_point","pre_b_ema","pre_s_ema","pre_b","pre_s","k","Number","isNaN","props"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react'\r\n\r\nlet item_cache = {};\r\n\r\n\r\nfunction formatNumber(number) {\r\n    if (number >= 1000000) {\r\n        return formatter.format(round(number / 1000000, 2)) + 'M'\r\n    } else if (number >= 1000) {\r\n        return formatter.format(round(number / 1000, 2)) + 'K'\r\n    } else {\r\n        return round(number, 2)\r\n    }\r\n}\r\n  \r\n\r\n// posts will be populated at build time by getStaticProps()\r\nfunction PersonalTable({ bazaarItems }) {\r\n    return (\r\n        <Table celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Name</Table.HeaderCell>\r\n                    <Table.HeaderCell>Quantity</Table.HeaderCell>\r\n                    <Table.HeaderCell>Invested</Table.HeaderCell>\r\n                    <Table.HeaderCell>Estimated Profit</Table.HeaderCell>\r\n                    <Table.HeaderCell>Gradient</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {bazaarItems.map((item) => (\r\n                    <Table.Row>\r\n                        <Table.Cell>\r\n                            <Label ribbon>{item.name}</Label>\r\n                        </Table.Cell>\r\n                        <Table.Cell>{item.evolume} </Table.Cell>\r\n                        <Table.Cell>{item.invested}</Table.Cell>\r\n                        <Table.Cell>{formatNumber(item.eprofit)} ( {item.pprofit}% ) </Table.Cell>\r\n                        <Table.Cell>{item.gradient < 0 ? 'Product sell value decreasing' : 'Product sell value increasing'}</Table.Cell>\r\n                    </Table.Row>\r\n                ))}\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n  }\r\n\r\n  function advise(balance, count = 6, time = 5, include_stablity = true) {\r\n    //console.log(advise);\r\n\r\n    const unsorted = []\r\n\r\n    for (const product_name in item_cache) {\r\n        const product = item_cache[product_name]\r\n        //console.log(product);\r\n        const profit = (product.sell * 0.99) - product.buy\r\n\r\n        const tvolume = (Math.min(product.volume, product.svolume) / 10080) * time\r\n        const evolume = Math.floor(limit(tvolume, 0, balance / product.buy))\r\n\r\n        const eprofit = (evolume * profit)\r\n\r\n        unsorted.push({\r\n            'name': product_name,\r\n            'evolume': evolume,\r\n            'invested': (product.buy * evolume).toFixed(2),\r\n            'pinvested': (((product.buy * evolume) * 100) / balance).toFixed(1),\r\n            'eprofit': eprofit.toFixed(2),\r\n            'pprofit': ((profit / product.buy) * 100).toFixed(1),\r\n            'gradient': product.sell - product.sell_ema\r\n        })\r\n    }\r\n\r\n    const sorted = unsorted.sort((a, b) => {\r\n        return b.eprofit - a.eprofit\r\n    })\r\n\r\n    //console.log(sorted);\r\n\r\n    //console.log(\"Length \" + sorted.length);\r\n\r\n    if (include_stablity) return sorted.filter(item => (item_cache[item.name].buy > item_cache[item.name].buy_ema) && (item_cache[item.name].sell > item_cache[item.name].sell_ema)).slice(0, count)\r\n    \r\n    //console.log(\"Length \" + sorted.length);\r\n\r\n    //console.log(sorted.slice(0, 6));\r\n\r\n    return sorted.slice(0, count);\r\n}\r\n\r\n\r\n  // This function gets called at build time on server-side.\r\n  // It won't be called on client-side, so you can even do\r\n  // direct database queries. See the \"Technical details\" section.\r\n  export async function getStaticProps() {\r\n    // Call an external API endpoint to get posts.\r\n    // You can use any data fetching library\r\n    \r\n    const api_res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=92e1a16e-382e-4840-b482-7966d24f2c1a`);\r\n    const json = await api_res.json();\r\n\r\n    const prettyNames_res = await fetch(`./prettyNames.json`);\r\n    const nameJson = await prettyNames_res.json();\r\n  \r\n    // By returning { props: posts }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n\r\n\r\n    \r\n    //console.log(json['products']['INK_SACK:3']['sell_summary'][0]['pricePerUnit']);\r\n\r\n    const items = Object.keys(json['products']).map(function (key) {\r\n        if(key === 'ENCHANTED_CARROT_ON_A_STICK') return {\r\n            'name': \"broken\",\r\n            'buy': 1,\r\n            'sell': 1,\r\n            'volume': 1,\r\n            'svolume': 1\r\n        }\r\n        return {\r\n            'name': nameJson[key]['name'],\r\n            'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\r\n            'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\r\n            'volume': json['products'][key]['quick_status']['buyMovingWeek'],\r\n            'svolume': json['products'][key]['quick_status']['sellMovingWeek']\r\n        }\r\n    });\r\n\r\n    const buy_point = [];\r\n    const sell_point = [];\r\n\r\n    for (const item of items) {\r\n        if (item.name === \"ENCHANTED_CARROT_ON_A_STICK\") continue;\r\n        //console.log(item.buy);\r\n        if (!item_cache[item.name]) {\r\n            item_cache[item.name] = {\r\n                buy: item.buy,\r\n                sell: item.sell,\r\n                volume: item.volume,\r\n                svolume: item.svolume,\r\n                buy_ema: item.buy,\r\n                sell_ema: item.sell\r\n            }\r\n        } else {\r\n            const pre_b_ema = item_cache[item.name].buy_ema;\r\n            const pre_s_ema = item_cache[item.name].sell_ema;\r\n            const pre_b = item_cache[item.name].buy;\r\n            const pre_s = item_cache[item.name].sell;\r\n\r\n            item_cache[item.name].buy = item.buy;\r\n            item_cache[item.name].sell = item.sell;\r\n            item_cache[item.name].volume = item.volume;\r\n            item_cache[item.name].svolume = item.svolume;\r\n            item_cache[item.name].buy_ema = item.buy * k + pre_b_ema * (1 - k);\r\n            item_cache[item.name].sell_ema = item.sell * k + pre_s_ema * (1 - k);\r\n\r\n            if ((pre_b <= pre_b_ema) && (item.buy > item_cache[item.name].buy_ema)) buy_point.push(item.name);\r\n            if ((pre_s >= pre_s_ema) && (item.sell < item_cache[item.name].sell_ema)) sell_point.push(item.name);\r\n        }\r\n    }\r\n\r\n    const time = 15\r\n\r\n    const bazaarItems = advise(100000, 6, Number.isNaN(time) ? 15 : time, false);\r\n\r\n    return {\r\n      props: {\r\n        bazaarItems,\r\n      },\r\n    }\r\n  }\r\n  \r\n  export default PersonalTable"]},"metadata":{},"sourceType":"module"}