{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar fetch = require('node-fetch');\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar asyncIsDone = false;\nvar item_cache = {};\n\nfunction limit(val, min, max) {\n  return val < min ? min : val > max ? max : val;\n}\n\nfunction advise(balance) {\n  var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n  var include_stablity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  //console.log(advise);\n  var unsorted = [];\n\n  for (var product_name in item_cache) {\n    var product = item_cache[product_name]; //console.log(product);\n\n    var profit = product.sell * 0.99 - product.buy;\n    var tvolume = Math.min(product.volume, product.svolume) / 10080 * time;\n    var evolume = Math.floor(limit(tvolume, 0, balance / product.buy));\n    var eprofit = evolume * profit;\n    unsorted.push({\n      'name': product_name,\n      'evolume': evolume,\n      'invested': (product.buy * evolume).toFixed(2),\n      'pinvested': (product.buy * evolume * 100 / balance).toFixed(1),\n      'eprofit': eprofit.toFixed(2),\n      'pprofit': (profit / product.buy * 100).toFixed(1),\n      'gradient': product.sell - product.sell_ema\n    });\n  }\n\n  var sorted = unsorted.sort(function (a, b) {\n    return b.eprofit - a.eprofit;\n  }); //console.log(sorted);\n  //console.log(\"Length \" + sorted.length);\n\n  if (include_stablity) return sorted.filter(function (item) {\n    return item_cache[item.name].buy > item_cache[item.name].buy_ema && item_cache[item.name].sell > item_cache[item.name].sell_ema;\n  }).slice(0, count); //console.log(\"Length \" + sorted.length);\n  //console.log(sorted.slice(0, 6));\n\n  return sorted.slice(0, count);\n}\n\nfunction convertNumber(input) {\n  var exp = /[A-z]+/.exec(input);\n  var num = /[+-]?([0-9]*[.])?[0-9]+/.exec(input);\n\n  if (exp[0].toUpperCase() == 'M' || exp[0].toUpperCase() == 'MIL') {\n    return num[0] * 1000000;\n  } else if (exp[0].toUpperCase() == 'K') {\n    return num[0] * 1000;\n  }\n}\n\nvar formatter = new Intl.NumberFormat();\n\nfunction formatNumber(number) {\n  if (number >= 1000000) {\n    return formatter.format(round(number / 1000000, 2)) + 'M';\n  } else if (number >= 1000) {\n    return formatter.format(round(number / 1000, 2)) + 'K';\n  } else {\n    return round(number, 2);\n  }\n}\n\nfunction round(value, decimals) {\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\nvar personalStrategy = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var api_res, json, items, buy_point, sell_point, _iterator, _step, item, pre_b_ema, pre_s_ema, pre_b, pre_s, time, sorted_input, response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.hypixel.net/skyblock/bazaar?key=92e1a16e-382e-4840-b482-7966d24f2c1a\");\n\n          case 2:\n            api_res = _context.sent;\n            _context.next = 5;\n            return api_res.json();\n\n          case 5:\n            json = _context.sent;\n            //console.log(json['products']['INK_SACK:3']['sell_summary'][0]['pricePerUnit']);\n            items = Object.keys(json['products']).map(function (key) {\n              if (key === 'ENCHANTED_CARROT_ON_A_STICK') return {\n                'name': \"broken\",\n                'buy': 1,\n                'sell': 1,\n                'volume': 1,\n                'svolume': 1\n              };\n              return {\n                'name': json['products'][key]['product_id'],\n                'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\n                'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\n                'volume': json['products'][key]['quick_status']['buyMovingWeek'],\n                'svolume': json['products'][key]['quick_status']['sellMovingWeek']\n              };\n            });\n            buy_point = [];\n            sell_point = [];\n            _iterator = _createForOfIteratorHelper(items);\n            _context.prev = 10;\n\n            _iterator.s();\n\n          case 12:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 19;\n              break;\n            }\n\n            item = _step.value;\n\n            if (!(item.name === \"ENCHANTED_CARROT_ON_A_STICK\")) {\n              _context.next = 16;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 17);\n\n          case 16:\n            //console.log(item.buy);\n            if (!item_cache[item.name]) {\n              item_cache[item.name] = {\n                buy: item.buy,\n                sell: item.sell,\n                volume: item.volume,\n                svolume: item.svolume,\n                buy_ema: item.buy,\n                sell_ema: item.sell\n              };\n            } else {\n              pre_b_ema = item_cache[item.name].buy_ema;\n              pre_s_ema = item_cache[item.name].sell_ema;\n              pre_b = item_cache[item.name].buy;\n              pre_s = item_cache[item.name].sell;\n              item_cache[item.name].buy = item.buy;\n              item_cache[item.name].sell = item.sell;\n              item_cache[item.name].volume = item.volume;\n              item_cache[item.name].svolume = item.svolume;\n              item_cache[item.name].buy_ema = item.buy * k + pre_b_ema * (1 - k);\n              item_cache[item.name].sell_ema = item.sell * k + pre_s_ema * (1 - k);\n              if (pre_b <= pre_b_ema && item.buy > item_cache[item.name].buy_ema) buy_point.push(item.name);\n              if (pre_s >= pre_s_ema && item.sell < item_cache[item.name].sell_ema) sell_point.push(item.name);\n            }\n\n          case 17:\n            _context.next = 12;\n            break;\n\n          case 19:\n            _context.next = 24;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](10);\n\n            _iterator.e(_context.t0);\n\n          case 24:\n            _context.prev = 24;\n\n            _iterator.f();\n\n            return _context.finish(24);\n\n          case 27:\n            time = 15;\n            sorted_input = advise(100000, 6, Number.isNaN(time) ? 15 : time, false);\n            response = sorted_input.map(function (item, i) {\n              return \"\".concat(i + 1, \": **\").concat(item.name.replace('_', ' '), \"**\\nQuantity: **\").concat(item.evolume, \"**\\nInvested: **\").concat(formatNumber(item.invested), \"** _(\").concat(item.pinvested, \"%)_\\nEstimated Profit: **\").concat(formatNumber(item.eprofit), \"** _(\").concat(item.pprofit, \"%)_\\nSell price trend: **\").concat(item.gradient < 0 ? 'Product sell value decreasing' : 'Product sell value increasing', \"**\");\n            }).join('\\n\\n'); //console.log(\"response\");\n\n            return _context.abrupt(\"return\", sorted_input);\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[10, 21, 24, 27]]);\n  }));\n\n  return function personalStrategy() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default personalStrategy;","map":{"version":3,"sources":["C:/Users/rsale/Documents/SSB/components/advise.js"],"names":["fetch","require","path","fs","asyncIsDone","item_cache","limit","val","min","max","advise","balance","count","time","include_stablity","unsorted","product_name","product","profit","sell","buy","tvolume","Math","volume","svolume","evolume","floor","eprofit","push","toFixed","sell_ema","sorted","sort","a","b","filter","item","name","buy_ema","slice","convertNumber","input","exp","exec","num","toUpperCase","formatter","Intl","NumberFormat","formatNumber","number","format","round","value","decimals","Number","personalStrategy","api_res","json","items","Object","keys","map","key","buy_point","sell_point","pre_b_ema","pre_s_ema","pre_b","pre_s","k","sorted_input","isNaN","response","i","replace","invested","pinvested","pprofit","gradient","join"],"mappings":"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","sourcesContent":["const fetch = require('node-fetch')\r\nconst path = require('path')\r\nconst fs = require('fs');\r\n\r\n\r\nlet asyncIsDone = false;\r\n\r\nlet item_cache = {};\r\n\r\n\r\nfunction limit(val, min, max) {\r\n    return val < min ? min : (val > max ? max : val)\r\n}\r\n\r\n\r\nfunction advise(balance, count = 6, time = 5, include_stablity = true) {\r\n    //console.log(advise);\r\n\r\n    const unsorted = []\r\n\r\n    for (const product_name in item_cache) {\r\n        const product = item_cache[product_name]\r\n        //console.log(product);\r\n        const profit = (product.sell * 0.99) - product.buy\r\n\r\n        const tvolume = (Math.min(product.volume, product.svolume) / 10080) * time\r\n        const evolume = Math.floor(limit(tvolume, 0, balance / product.buy))\r\n\r\n        const eprofit = (evolume * profit)\r\n\r\n        unsorted.push({\r\n            'name': product_name,\r\n            'evolume': evolume,\r\n            'invested': (product.buy * evolume).toFixed(2),\r\n            'pinvested': (((product.buy * evolume) * 100) / balance).toFixed(1),\r\n            'eprofit': eprofit.toFixed(2),\r\n            'pprofit': ((profit / product.buy) * 100).toFixed(1),\r\n            'gradient': product.sell - product.sell_ema\r\n        })\r\n    }\r\n\r\n    const sorted = unsorted.sort((a, b) => {\r\n        return b.eprofit - a.eprofit\r\n    })\r\n\r\n    //console.log(sorted);\r\n\r\n    //console.log(\"Length \" + sorted.length);\r\n\r\n    if (include_stablity) return sorted.filter(item => (item_cache[item.name].buy > item_cache[item.name].buy_ema) && (item_cache[item.name].sell > item_cache[item.name].sell_ema)).slice(0, count)\r\n    \r\n    //console.log(\"Length \" + sorted.length);\r\n\r\n    //console.log(sorted.slice(0, 6));\r\n\r\n    return sorted.slice(0, count);\r\n}\r\n\r\nfunction convertNumber(input) {\r\n    let exp = /[A-z]+/.exec(input)\r\n    let num = /[+-]?([0-9]*[.])?[0-9]+/.exec(input)\r\n\r\n    if (exp[0].toUpperCase() == 'M' || exp[0].toUpperCase() == 'MIL') {\r\n        return num[0] * 1000000\r\n    } else if (exp[0].toUpperCase() == 'K') {\r\n        return num[0] * 1000\r\n    }\r\n}\r\n\r\nconst formatter = new Intl.NumberFormat()\r\n\r\nfunction formatNumber(number) {\r\n    if (number >= 1000000) {\r\n        return formatter.format(round(number / 1000000, 2)) + 'M'\r\n    } else if (number >= 1000) {\r\n        return formatter.format(round(number / 1000, 2)) + 'K'\r\n    } else {\r\n        return round(number, 2)\r\n    }\r\n}\r\n\r\nfunction round(value, decimals) {\r\n    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals)\r\n}\r\n\r\n\r\nconst personalStrategy = async () =>  {\r\n\r\n    const api_res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=92e1a16e-382e-4840-b482-7966d24f2c1a`);\r\n    const json = await api_res.json();\r\n\r\n    \r\n    //console.log(json['products']['INK_SACK:3']['sell_summary'][0]['pricePerUnit']);\r\n\r\n    const items = Object.keys(json['products']).map(function (key) {\r\n        if(key === 'ENCHANTED_CARROT_ON_A_STICK') return {\r\n            'name': \"broken\",\r\n            'buy': 1,\r\n            'sell': 1,\r\n            'volume': 1,\r\n            'svolume': 1\r\n        }\r\n        return {\r\n            'name': json['products'][key]['product_id'],\r\n            'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\r\n            'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\r\n            'volume': json['products'][key]['quick_status']['buyMovingWeek'],\r\n            'svolume': json['products'][key]['quick_status']['sellMovingWeek']\r\n        }\r\n    });\r\n\r\n    const buy_point = [];\r\n    const sell_point = [];\r\n\r\n    for (const item of items) {\r\n        if (item.name === \"ENCHANTED_CARROT_ON_A_STICK\") continue;\r\n        //console.log(item.buy);\r\n        if (!item_cache[item.name]) {\r\n            item_cache[item.name] = {\r\n                buy: item.buy,\r\n                sell: item.sell,\r\n                volume: item.volume,\r\n                svolume: item.svolume,\r\n                buy_ema: item.buy,\r\n                sell_ema: item.sell\r\n            }\r\n        } else {\r\n            const pre_b_ema = item_cache[item.name].buy_ema;\r\n            const pre_s_ema = item_cache[item.name].sell_ema;\r\n            const pre_b = item_cache[item.name].buy;\r\n            const pre_s = item_cache[item.name].sell;\r\n\r\n            item_cache[item.name].buy = item.buy;\r\n            item_cache[item.name].sell = item.sell;\r\n            item_cache[item.name].volume = item.volume;\r\n            item_cache[item.name].svolume = item.svolume;\r\n            item_cache[item.name].buy_ema = item.buy * k + pre_b_ema * (1 - k);\r\n            item_cache[item.name].sell_ema = item.sell * k + pre_s_ema * (1 - k);\r\n\r\n            if ((pre_b <= pre_b_ema) && (item.buy > item_cache[item.name].buy_ema)) buy_point.push(item.name);\r\n            if ((pre_s >= pre_s_ema) && (item.sell < item_cache[item.name].sell_ema)) sell_point.push(item.name);\r\n        }\r\n    }\r\n\r\n    const time = 15\r\n\r\n    const sorted_input = advise(100000, 6, Number.isNaN(time) ? 15 : time, false)\r\n\r\n    let response = sorted_input.map((item, i) => `${i + 1}: **${item.name.replace('_', ' ')}**\\nQuantity: **${item.evolume}**\\nInvested: **${formatNumber(item.invested)}** _(${item.pinvested}%)_\\nEstimated Profit: **${formatNumber(item.eprofit)}** _(${item.pprofit}%)_\\nSell price trend: **${item.gradient < 0 ? 'Product sell value decreasing' : 'Product sell value increasing'}**`).join('\\n\\n');\r\n\r\n    //console.log(\"response\");\r\n    return sorted_input;\r\n    //console.log(response);\r\n}\r\n\r\nexport default personalStrategy;\r\n\r\n"]},"metadata":{},"sourceType":"module"}