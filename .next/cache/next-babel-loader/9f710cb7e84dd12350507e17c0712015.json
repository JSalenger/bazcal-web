{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rsale\\\\Documents\\\\SSB\\\\pages\\\\personalTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\n\nfunction limit(val, min, max) {\n  return val < min ? min : val > max ? max : val;\n}\n\nconst formatter = new Intl.NumberFormat();\n\nfunction round(value, decimals) {\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\nfunction formatNumber(number) {\n  if (number >= 1000000) {\n    return formatter.format(round(number / 1000000, 2)) + 'M';\n  } else if (number >= 1000) {\n    return formatter.format(round(number / 1000, 2)) + 'K';\n  } else {\n    return round(number, 2);\n  }\n} // items will be populated at build time by getStaticProps()\n\n\nfunction PersonalTable({\n  bazaarItems\n}) {\n  return __jsx(Table, {\n    celled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Name\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Quantity\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Invested\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Estimated Profit\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Gradient\"))), __jsx(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, bazaarItems.map(item => __jsx(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, __jsx(Label, {\n    ribbon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, item.name)), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, item.evolume, \" \"), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, item.invested), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, formatNumber(item.eprofit), \" ( \", item.pprofit, \"% ) \"), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, item.gradient < 0 ? 'Product sell value decreasing' : 'Product sell value increasing')))));\n}\n\nfunction advise(balance, count = 6, time = 5, include_stablity = true, item_cache) {\n  //console.log(advise);\n  const unsorted = [];\n\n  for (const product_name in item_cache) {\n    const product = item_cache[product_name]; //console.log(product);\n\n    const profit = product.sell * 0.99 - product.buy;\n    const tvolume = Math.min(product.volume, product.svolume) / 10080 * time;\n    const evolume = Math.floor(limit(tvolume, 0, balance / product.buy));\n    const eprofit = evolume * profit;\n    unsorted.push({\n      'name': product_name,\n      'evolume': evolume,\n      'invested': (product.buy * evolume).toFixed(2),\n      'pinvested': (product.buy * evolume * 100 / balance).toFixed(1),\n      'eprofit': eprofit.toFixed(2),\n      'pprofit': (profit / product.buy * 100).toFixed(1),\n      'gradient': product.sell - product.sell_ema\n    });\n  }\n\n  const sorted = unsorted.sort((a, b) => {\n    return b.eprofit - a.eprofit;\n  }); //console.log(sorted);\n  //console.log(\"Length \" + sorted.length);\n\n  if (include_stablity) return sorted.filter(item => item_cache[item.name].buy > item_cache[item.name].buy_ema && item_cache[item.name].sell > item_cache[item.name].sell_ema).slice(0, count); //console.log(\"Length \" + sorted.length);\n  //console.log(sorted.slice(0, 6));\n\n  return sorted.slice(0, count);\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getServerSideProps() {\n  console.log(\"start\"); // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n\n  const api_res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=92e1a16e-382e-4840-b482-7966d24f2c1a`);\n  const json = await api_res.json();\n  const prettyNames_res = await fetch(`https://api.slothpixel.me/api/constants/skyblock_items`);\n  const nameJson = await prettyNames_res.json();\n  let item_cache = {}; // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  //console.log(json['products']['INK_SACK:3']['sell_summary'][0]['pricePerUnit']);\n  // CLEAN THIS UP LATER, USE CUSTOM JSON \n\n  const items = Object.keys(json['products']).map(function (key) {\n    if (key === 'ENCHANTED_CARROT_ON_A_STICK') return {\n      'name': \"broken\",\n      'buy': 1,\n      'sell': 1,\n      'volume': 1,\n      'svolume': 1\n    };\n    if (key === 'CATALYST') return {\n      'name': \"Catalyst\",\n      'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\n      'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\n      'volume': json['products'][key]['quick_status']['buyMovingWeek'],\n      'svolume': json['products'][key]['quick_status']['sellMovingWeek']\n    };\n    if (key === 'SUPER_EGG') return {\n      'name': \"Super Enchanted Egg\",\n      'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\n      'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\n      'volume': json['products'][key]['quick_status']['buyMovingWeek'],\n      'svolume': json['products'][key]['quick_status']['sellMovingWeek']\n    };\n    if (key === 'STOCK_OF_STONKS') return {\n      'name': \"Stock of Stonks\",\n      'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\n      'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\n      'volume': json['products'][key]['quick_status']['buyMovingWeek'],\n      'svolume': json['products'][key]['quick_status']['sellMovingWeek']\n    };\n    return {\n      'name': nameJson[key]['name'],\n      'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\n      'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\n      'volume': json['products'][key]['quick_status']['buyMovingWeek'],\n      'svolume': json['products'][key]['quick_status']['sellMovingWeek']\n    };\n  });\n  const buy_point = [];\n  const sell_point = [];\n\n  for (const item of items) {\n    if (item.name === \"ENCHANTED_CARROT_ON_A_STICK\") continue; //console.log(item.buy);\n\n    if (!item_cache[item.name]) {\n      item_cache[item.name] = {\n        buy: item.buy,\n        sell: item.sell,\n        volume: item.volume,\n        svolume: item.svolume,\n        buy_ema: item.buy,\n        sell_ema: item.sell\n      };\n    } else {\n      const pre_b_ema = item_cache[item.name].buy_ema;\n      const pre_s_ema = item_cache[item.name].sell_ema;\n      const pre_b = item_cache[item.name].buy;\n      const pre_s = item_cache[item.name].sell;\n      item_cache[item.name].buy = item.buy;\n      item_cache[item.name].sell = item.sell;\n      item_cache[item.name].volume = item.volume;\n      item_cache[item.name].svolume = item.svolume;\n      item_cache[item.name].buy_ema = item.buy * k + pre_b_ema * (1 - k);\n      item_cache[item.name].sell_ema = item.sell * k + pre_s_ema * (1 - k);\n      if (pre_b <= pre_b_ema && item.buy > item_cache[item.name].buy_ema) buy_point.push(item.name);\n      if (pre_s >= pre_s_ema && item.sell < item_cache[item.name].sell_ema) sell_point.push(item.name);\n    }\n  }\n\n  const time = 15;\n  const bazaarItems = advise(100000, 6, Number.isNaN(time) ? 15 : time, false, item_cache);\n  return {\n    props: {\n      bazaarItems\n    }\n  };\n}\nexport default PersonalTable;","map":{"version":3,"sources":["C:/Users/rsale/Documents/SSB/pages/personalTable.js"],"names":["React","Icon","Label","Menu","Table","limit","val","min","max","formatter","Intl","NumberFormat","round","value","decimals","Number","Math","formatNumber","number","format","PersonalTable","bazaarItems","map","item","name","evolume","invested","eprofit","pprofit","gradient","advise","balance","count","time","include_stablity","item_cache","unsorted","product_name","product","profit","sell","buy","tvolume","volume","svolume","floor","push","toFixed","sell_ema","sorted","sort","a","b","filter","buy_ema","slice","getServerSideProps","console","log","api_res","fetch","json","prettyNames_res","nameJson","items","Object","keys","key","buy_point","sell_point","pre_b_ema","pre_s_ema","pre_b","pre_s","k","isNaN","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,KAA5B,QAAyC,mBAAzC;;AAGA,SAASC,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC1B,SAAOF,GAAG,GAAGC,GAAN,GAAYA,GAAZ,GAAmBD,GAAG,GAAGE,GAAN,GAAYA,GAAZ,GAAkBF,GAA5C;AACH;;AAED,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,EAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,SAAOC,MAAM,CAACC,IAAI,CAACJ,KAAL,CAAWC,KAAK,GAAG,GAAR,GAAcC,QAAzB,IAAqC,IAArC,GAA4CA,QAA7C,CAAb;AACH;;AAED,SAASG,YAAT,CAAsBC,MAAtB,EAA8B;AAC1B,MAAIA,MAAM,IAAI,OAAd,EAAuB;AACnB,WAAOT,SAAS,CAACU,MAAV,CAAiBP,KAAK,CAACM,MAAM,GAAG,OAAV,EAAmB,CAAnB,CAAtB,IAA+C,GAAtD;AACH,GAFD,MAEO,IAAIA,MAAM,IAAI,IAAd,EAAoB;AACvB,WAAOT,SAAS,CAACU,MAAV,CAAiBP,KAAK,CAACM,MAAM,GAAG,IAAV,EAAgB,CAAhB,CAAtB,IAA4C,GAAnD;AACH,GAFM,MAEA;AACH,WAAON,KAAK,CAACM,MAAD,EAAS,CAAT,CAAZ;AACH;AACJ,C,CAGD;;;AACA,SAASE,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAwC;AACpC,SACI,MAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,EAKI,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,CADJ,EAUI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,WAAW,CAACC,GAAZ,CAAiBC,IAAD,IACb,MAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeA,IAAI,CAACC,IAApB,CADJ,CADJ,EAII,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,IAAI,CAACE,OAAlB,MAJJ,EAKI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaF,IAAI,CAACG,QAAlB,CALJ,EAMI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaT,YAAY,CAACM,IAAI,CAACI,OAAN,CAAzB,SAA4CJ,IAAI,CAACK,OAAjD,SANJ,EAOI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaL,IAAI,CAACM,QAAL,GAAgB,CAAhB,GAAoB,+BAApB,GAAsD,+BAAnE,CAPJ,CADH,CADL,CAVJ,CADJ;AA0BD;;AAED,SAASC,MAAT,CAAgBC,OAAhB,EAAyBC,KAAK,GAAG,CAAjC,EAAoCC,IAAI,GAAG,CAA3C,EAA8CC,gBAAgB,GAAG,IAAjE,EAAuEC,UAAvE,EAAmF;AACjF;AAEA,QAAMC,QAAQ,GAAG,EAAjB;;AAEA,OAAK,MAAMC,YAAX,IAA2BF,UAA3B,EAAuC;AACnC,UAAMG,OAAO,GAAGH,UAAU,CAACE,YAAD,CAA1B,CADmC,CAEnC;;AACA,UAAME,MAAM,GAAID,OAAO,CAACE,IAAR,GAAe,IAAhB,GAAwBF,OAAO,CAACG,GAA/C;AAEA,UAAMC,OAAO,GAAI1B,IAAI,CAACT,GAAL,CAAS+B,OAAO,CAACK,MAAjB,EAAyBL,OAAO,CAACM,OAAjC,IAA4C,KAA7C,GAAsDX,IAAtE;AACA,UAAMR,OAAO,GAAGT,IAAI,CAAC6B,KAAL,CAAWxC,KAAK,CAACqC,OAAD,EAAU,CAAV,EAAaX,OAAO,GAAGO,OAAO,CAACG,GAA/B,CAAhB,CAAhB;AAEA,UAAMd,OAAO,GAAIF,OAAO,GAAGc,MAA3B;AAEAH,IAAAA,QAAQ,CAACU,IAAT,CAAc;AACV,cAAQT,YADE;AAEV,iBAAWZ,OAFD;AAGV,kBAAY,CAACa,OAAO,CAACG,GAAR,GAAchB,OAAf,EAAwBsB,OAAxB,CAAgC,CAAhC,CAHF;AAIV,mBAAa,CAAGT,OAAO,CAACG,GAAR,GAAchB,OAAf,GAA0B,GAA3B,GAAkCM,OAAnC,EAA4CgB,OAA5C,CAAoD,CAApD,CAJH;AAKV,iBAAWpB,OAAO,CAACoB,OAAR,CAAgB,CAAhB,CALD;AAMV,iBAAW,CAAER,MAAM,GAAGD,OAAO,CAACG,GAAlB,GAAyB,GAA1B,EAA+BM,OAA/B,CAAuC,CAAvC,CAND;AAOV,kBAAYT,OAAO,CAACE,IAAR,GAAeF,OAAO,CAACU;AAPzB,KAAd;AASH;;AAED,QAAMC,MAAM,GAAGb,QAAQ,CAACc,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnC,WAAOA,CAAC,CAACzB,OAAF,GAAYwB,CAAC,CAACxB,OAArB;AACH,GAFc,CAAf,CA1BiF,CA8BjF;AAEA;;AAEA,MAAIO,gBAAJ,EAAsB,OAAOe,MAAM,CAACI,MAAP,CAAc9B,IAAI,IAAKY,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBiB,GAAtB,GAA4BN,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsB8B,OAAnD,IAAgEnB,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBgB,IAAtB,GAA6BL,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBwB,QAAzI,EAAoJO,KAApJ,CAA0J,CAA1J,EAA6JvB,KAA7J,CAAP,CAlC2D,CAoCjF;AAEA;;AAEA,SAAOiB,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgBvB,KAAhB,CAAP;AACH,C,CAGC;AACA;AACA;;;AACA,OAAO,eAAewB,kBAAf,GAAoC;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADyC,CAEzC;AACA;;AAEA,QAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,kFAAF,CAA3B;AACA,QAAMC,IAAI,GAAG,MAAMF,OAAO,CAACE,IAAR,EAAnB;AAEA,QAAMC,eAAe,GAAG,MAAMF,KAAK,CAAE,wDAAF,CAAnC;AACA,QAAMG,QAAQ,GAAG,MAAMD,eAAe,CAACD,IAAhB,EAAvB;AAEA,MAAI1B,UAAU,GAAG,EAAjB,CAXyC,CAazC;AACA;AAIA;AAEA;;AAEA,QAAM6B,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYL,IAAI,CAAC,UAAD,CAAhB,EAA8BvC,GAA9B,CAAkC,UAAU6C,GAAV,EAAe;AAC3D,QAAGA,GAAG,KAAK,6BAAX,EAA0C,OAAO;AAC7C,cAAQ,QADqC;AAE7C,aAAO,CAFsC;AAG7C,cAAQ,CAHqC;AAI7C,gBAAU,CAJmC;AAK7C,iBAAW;AALkC,KAAP;AAO1C,QAAGA,GAAG,KAAK,UAAX,EAAuB,OAAO;AAC1B,cAAQ,UADkB;AAE1B,aAAON,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,CAAtC,EAAyC,cAAzC,CAFmB;AAG1B,cAAQN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,aAAtB,EAAqC,CAArC,EAAwC,cAAxC,CAHkB;AAI1B,gBAAUN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,eAAtC,CAJgB;AAK1B,iBAAWN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,gBAAtC;AALe,KAAP;AAOvB,QAAGA,GAAG,KAAK,WAAX,EAAwB,OAAO;AAC3B,cAAQ,qBADmB;AAE3B,aAAON,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,CAAtC,EAAyC,cAAzC,CAFoB;AAG3B,cAAQN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,aAAtB,EAAqC,CAArC,EAAwC,cAAxC,CAHmB;AAI3B,gBAAUN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,eAAtC,CAJiB;AAK3B,iBAAWN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,gBAAtC;AALgB,KAAP;AAOxB,QAAGA,GAAG,KAAK,iBAAX,EAA8B,OAAO;AACjC,cAAQ,iBADyB;AAEjC,aAAON,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,CAAtC,EAAyC,cAAzC,CAF0B;AAGjC,cAAQN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,aAAtB,EAAqC,CAArC,EAAwC,cAAxC,CAHyB;AAIjC,gBAAUN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,eAAtC,CAJuB;AAKjC,iBAAWN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,gBAAtC;AALsB,KAAP;AAO9B,WAAO;AACH,cAAQJ,QAAQ,CAACI,GAAD,CAAR,CAAc,MAAd,CADL;AAEH,aAAON,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,CAAtC,EAAyC,cAAzC,CAFJ;AAGH,cAAQN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,aAAtB,EAAqC,CAArC,EAAwC,cAAxC,CAHL;AAIH,gBAAUN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,eAAtC,CAJP;AAKH,iBAAWN,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,EAAsB,cAAtB,EAAsC,gBAAtC;AALR,KAAP;AAOH,GApCa,CAAd;AAsCA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,UAAU,GAAG,EAAnB;;AAEA,OAAK,MAAM9C,IAAX,IAAmByC,KAAnB,EAA0B;AACtB,QAAIzC,IAAI,CAACC,IAAL,KAAc,6BAAlB,EAAiD,SAD3B,CAEtB;;AACA,QAAI,CAACW,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAf,EAA4B;AACxBW,MAAAA,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,GAAwB;AACpBiB,QAAAA,GAAG,EAAElB,IAAI,CAACkB,GADU;AAEpBD,QAAAA,IAAI,EAAEjB,IAAI,CAACiB,IAFS;AAGpBG,QAAAA,MAAM,EAAEpB,IAAI,CAACoB,MAHO;AAIpBC,QAAAA,OAAO,EAAErB,IAAI,CAACqB,OAJM;AAKpBU,QAAAA,OAAO,EAAE/B,IAAI,CAACkB,GALM;AAMpBO,QAAAA,QAAQ,EAAEzB,IAAI,CAACiB;AANK,OAAxB;AAQH,KATD,MASO;AACH,YAAM8B,SAAS,GAAGnC,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsB8B,OAAxC;AACA,YAAMiB,SAAS,GAAGpC,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBwB,QAAxC;AACA,YAAMwB,KAAK,GAAGrC,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBiB,GAApC;AACA,YAAMgC,KAAK,GAAGtC,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBgB,IAApC;AAEAL,MAAAA,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBiB,GAAtB,GAA4BlB,IAAI,CAACkB,GAAjC;AACAN,MAAAA,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBgB,IAAtB,GAA6BjB,IAAI,CAACiB,IAAlC;AACAL,MAAAA,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBmB,MAAtB,GAA+BpB,IAAI,CAACoB,MAApC;AACAR,MAAAA,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBoB,OAAtB,GAAgCrB,IAAI,CAACqB,OAArC;AACAT,MAAAA,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsB8B,OAAtB,GAAgC/B,IAAI,CAACkB,GAAL,GAAWiC,CAAX,GAAeJ,SAAS,IAAI,IAAII,CAAR,CAAxD;AACAvC,MAAAA,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBwB,QAAtB,GAAiCzB,IAAI,CAACiB,IAAL,GAAYkC,CAAZ,GAAgBH,SAAS,IAAI,IAAIG,CAAR,CAA1D;AAEA,UAAKF,KAAK,IAAIF,SAAV,IAAyB/C,IAAI,CAACkB,GAAL,GAAWN,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsB8B,OAA9D,EAAwEc,SAAS,CAACtB,IAAV,CAAevB,IAAI,CAACC,IAApB;AACxE,UAAKiD,KAAK,IAAIF,SAAV,IAAyBhD,IAAI,CAACiB,IAAL,GAAYL,UAAU,CAACZ,IAAI,CAACC,IAAN,CAAV,CAAsBwB,QAA/D,EAA0EqB,UAAU,CAACvB,IAAX,CAAgBvB,IAAI,CAACC,IAArB;AAC7E;AACJ;;AAED,QAAMS,IAAI,GAAG,EAAb;AAEA,QAAMZ,WAAW,GAAGS,MAAM,CAAC,MAAD,EAAS,CAAT,EAAYf,MAAM,CAAC4D,KAAP,CAAa1C,IAAb,IAAqB,EAArB,GAA0BA,IAAtC,EAA4C,KAA5C,EAAmDE,UAAnD,CAA1B;AAEA,SAAO;AACLyC,IAAAA,KAAK,EAAE;AACLvD,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,aAAf","sourcesContent":["import React from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react'\r\n\r\n\r\nfunction limit(val, min, max) {\r\n    return val < min ? min : (val > max ? max : val)\r\n}\r\n\r\nconst formatter = new Intl.NumberFormat()\r\n\r\nfunction round(value, decimals) {\r\n    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals)\r\n}\r\n\r\nfunction formatNumber(number) {\r\n    if (number >= 1000000) {\r\n        return formatter.format(round(number / 1000000, 2)) + 'M'\r\n    } else if (number >= 1000) {\r\n        return formatter.format(round(number / 1000, 2)) + 'K'\r\n    } else {\r\n        return round(number, 2)\r\n    }\r\n}\r\n  \r\n\r\n// items will be populated at build time by getStaticProps()\r\nfunction PersonalTable({ bazaarItems }) {\r\n    return (\r\n        <Table celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Name</Table.HeaderCell>\r\n                    <Table.HeaderCell>Quantity</Table.HeaderCell>\r\n                    <Table.HeaderCell>Invested</Table.HeaderCell>\r\n                    <Table.HeaderCell>Estimated Profit</Table.HeaderCell>\r\n                    <Table.HeaderCell>Gradient</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {bazaarItems.map((item) => (\r\n                    <Table.Row>\r\n                        <Table.Cell>\r\n                            <Label ribbon>{item.name}</Label>\r\n                        </Table.Cell>\r\n                        <Table.Cell>{item.evolume} </Table.Cell>\r\n                        <Table.Cell>{item.invested}</Table.Cell>\r\n                        <Table.Cell>{formatNumber(item.eprofit)} ( {item.pprofit}% ) </Table.Cell>\r\n                        <Table.Cell>{item.gradient < 0 ? 'Product sell value decreasing' : 'Product sell value increasing'}</Table.Cell>\r\n                    </Table.Row>\r\n                ))}\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n  }\r\n\r\n  function advise(balance, count = 6, time = 5, include_stablity = true, item_cache) {\r\n    //console.log(advise);\r\n\r\n    const unsorted = []\r\n\r\n    for (const product_name in item_cache) {\r\n        const product = item_cache[product_name]\r\n        //console.log(product);\r\n        const profit = (product.sell * 0.99) - product.buy\r\n\r\n        const tvolume = (Math.min(product.volume, product.svolume) / 10080) * time\r\n        const evolume = Math.floor(limit(tvolume, 0, balance / product.buy))\r\n\r\n        const eprofit = (evolume * profit)\r\n\r\n        unsorted.push({\r\n            'name': product_name,\r\n            'evolume': evolume,\r\n            'invested': (product.buy * evolume).toFixed(2),\r\n            'pinvested': (((product.buy * evolume) * 100) / balance).toFixed(1),\r\n            'eprofit': eprofit.toFixed(2),\r\n            'pprofit': ((profit / product.buy) * 100).toFixed(1),\r\n            'gradient': product.sell - product.sell_ema\r\n        })\r\n    }\r\n\r\n    const sorted = unsorted.sort((a, b) => {\r\n        return b.eprofit - a.eprofit\r\n    })\r\n\r\n    //console.log(sorted);\r\n\r\n    //console.log(\"Length \" + sorted.length);\r\n\r\n    if (include_stablity) return sorted.filter(item => (item_cache[item.name].buy > item_cache[item.name].buy_ema) && (item_cache[item.name].sell > item_cache[item.name].sell_ema)).slice(0, count)\r\n    \r\n    //console.log(\"Length \" + sorted.length);\r\n\r\n    //console.log(sorted.slice(0, 6));\r\n\r\n    return sorted.slice(0, count);\r\n}\r\n\r\n\r\n  // This function gets called at build time on server-side.\r\n  // It won't be called on client-side, so you can even do\r\n  // direct database queries. See the \"Technical details\" section.\r\n  export async function getServerSideProps() {\r\n    console.log(\"start\");\r\n    // Call an external API endpoint to get posts.\r\n    // You can use any data fetching library\r\n    \r\n    const api_res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=92e1a16e-382e-4840-b482-7966d24f2c1a`);\r\n    const json = await api_res.json();\r\n\r\n    const prettyNames_res = await fetch(`https://api.slothpixel.me/api/constants/skyblock_items`);\r\n    const nameJson = await prettyNames_res.json();\r\n\r\n    let item_cache = {};\r\n  \r\n    // By returning { props: posts }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n\r\n\r\n    \r\n    //console.log(json['products']['INK_SACK:3']['sell_summary'][0]['pricePerUnit']);\r\n\r\n    // CLEAN THIS UP LATER, USE CUSTOM JSON \r\n\r\n    const items = Object.keys(json['products']).map(function (key) {\r\n        if(key === 'ENCHANTED_CARROT_ON_A_STICK') return {\r\n            'name': \"broken\",\r\n            'buy': 1,\r\n            'sell': 1,\r\n            'volume': 1,\r\n            'svolume': 1\r\n        }\r\n        if(key === 'CATALYST') return {\r\n            'name': \"Catalyst\",\r\n            'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\r\n            'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\r\n            'volume': json['products'][key]['quick_status']['buyMovingWeek'],\r\n            'svolume': json['products'][key]['quick_status']['sellMovingWeek']\r\n        }\r\n        if(key === 'SUPER_EGG') return {\r\n            'name': \"Super Enchanted Egg\",\r\n            'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\r\n            'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\r\n            'volume': json['products'][key]['quick_status']['buyMovingWeek'],\r\n            'svolume': json['products'][key]['quick_status']['sellMovingWeek']\r\n        }\r\n        if(key === 'STOCK_OF_STONKS') return {\r\n            'name': \"Stock of Stonks\",\r\n            'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\r\n            'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\r\n            'volume': json['products'][key]['quick_status']['buyMovingWeek'],\r\n            'svolume': json['products'][key]['quick_status']['sellMovingWeek']\r\n        }\r\n        return {\r\n            'name': nameJson[key]['name'],\r\n            'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\r\n            'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\r\n            'volume': json['products'][key]['quick_status']['buyMovingWeek'],\r\n            'svolume': json['products'][key]['quick_status']['sellMovingWeek']\r\n        }\r\n    });\r\n\r\n    const buy_point = [];\r\n    const sell_point = [];\r\n\r\n    for (const item of items) {\r\n        if (item.name === \"ENCHANTED_CARROT_ON_A_STICK\") continue;\r\n        //console.log(item.buy);\r\n        if (!item_cache[item.name]) {\r\n            item_cache[item.name] = {\r\n                buy: item.buy,\r\n                sell: item.sell,\r\n                volume: item.volume,\r\n                svolume: item.svolume,\r\n                buy_ema: item.buy,\r\n                sell_ema: item.sell\r\n            }\r\n        } else {\r\n            const pre_b_ema = item_cache[item.name].buy_ema;\r\n            const pre_s_ema = item_cache[item.name].sell_ema;\r\n            const pre_b = item_cache[item.name].buy;\r\n            const pre_s = item_cache[item.name].sell;\r\n\r\n            item_cache[item.name].buy = item.buy;\r\n            item_cache[item.name].sell = item.sell;\r\n            item_cache[item.name].volume = item.volume;\r\n            item_cache[item.name].svolume = item.svolume;\r\n            item_cache[item.name].buy_ema = item.buy * k + pre_b_ema * (1 - k);\r\n            item_cache[item.name].sell_ema = item.sell * k + pre_s_ema * (1 - k);\r\n\r\n            if ((pre_b <= pre_b_ema) && (item.buy > item_cache[item.name].buy_ema)) buy_point.push(item.name);\r\n            if ((pre_s >= pre_s_ema) && (item.sell < item_cache[item.name].sell_ema)) sell_point.push(item.name);\r\n        }\r\n    }\r\n\r\n    const time = 15\r\n\r\n    const bazaarItems = advise(100000, 6, Number.isNaN(time) ? 15 : time, false, item_cache);\r\n\r\n    return {\r\n      props: {\r\n        bazaarItems,\r\n      },\r\n    }\r\n  }\r\n  \r\n  export default PersonalTable"]},"metadata":{},"sourceType":"module"}