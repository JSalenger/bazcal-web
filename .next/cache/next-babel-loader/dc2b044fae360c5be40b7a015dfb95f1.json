{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rsale\\\\Documents\\\\SSB\\\\components\\\\personalTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\nimport advise from './advise';\n\nfunction formatNumber(number) {\n  if (number >= 1000000) {\n    return formatter.format(round(number / 1000000, 2)) + 'M';\n  } else if (number >= 1000) {\n    return formatter.format(round(number / 1000, 2)) + 'K';\n  } else {\n    return round(number, 2);\n  }\n} // posts will be populated at build time by getStaticProps()\n\n\nfunction PersonalTable({\n  bazaarItems\n}) {\n  return __jsx(Table, {\n    celled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Name\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"Quantity\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Invested\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Estimated Profit\"), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Gradient\"))), __jsx(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, bazaarItems.map(item => __jsx(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, __jsx(Label, {\n    ribbon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, item.name)), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, item.evolume, \" \"), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, item.invested), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, formatNumber(item.eprofit), \" ( \", item.pprofit, \"% ) \"), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, item.gradient < 0 ? 'Product sell value decreasing' : 'Product sell value increasing')))));\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const api_res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=92e1a16e-382e-4840-b482-7966d24f2c1a`);\n  const json = await api_res.json();\n  const prettyNames_res = await fetch(`./prettyNames.json`);\n  const nameJson = await prettyNames_res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  //console.log(json['products']['INK_SACK:3']['sell_summary'][0]['pricePerUnit']);\n\n  const items = Object.keys(json['products']).map(function (key) {\n    if (key === 'ENCHANTED_CARROT_ON_A_STICK') return {\n      'name': \"broken\",\n      'buy': 1,\n      'sell': 1,\n      'volume': 1,\n      'svolume': 1\n    };\n    return {\n      'name': nameJson[key]['name'],\n      'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\n      'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\n      'volume': json['products'][key]['quick_status']['buyMovingWeek'],\n      'svolume': json['products'][key]['quick_status']['sellMovingWeek']\n    };\n  });\n  const buy_point = [];\n  const sell_point = [];\n\n  for (const item of items) {\n    if (item.name === \"ENCHANTED_CARROT_ON_A_STICK\") continue; //console.log(item.buy);\n\n    if (!item_cache[item.name]) {\n      item_cache[item.name] = {\n        buy: item.buy,\n        sell: item.sell,\n        volume: item.volume,\n        svolume: item.svolume,\n        buy_ema: item.buy,\n        sell_ema: item.sell\n      };\n    } else {\n      const pre_b_ema = item_cache[item.name].buy_ema;\n      const pre_s_ema = item_cache[item.name].sell_ema;\n      const pre_b = item_cache[item.name].buy;\n      const pre_s = item_cache[item.name].sell;\n      item_cache[item.name].buy = item.buy;\n      item_cache[item.name].sell = item.sell;\n      item_cache[item.name].volume = item.volume;\n      item_cache[item.name].svolume = item.svolume;\n      item_cache[item.name].buy_ema = item.buy * k + pre_b_ema * (1 - k);\n      item_cache[item.name].sell_ema = item.sell * k + pre_s_ema * (1 - k);\n      if (pre_b <= pre_b_ema && item.buy > item_cache[item.name].buy_ema) buy_point.push(item.name);\n      if (pre_s >= pre_s_ema && item.sell < item_cache[item.name].sell_ema) sell_point.push(item.name);\n    }\n  }\n\n  const time = 15;\n  const bazaarItems = advise(100000, 6, Number.isNaN(time) ? 15 : time, false);\n  return {\n    props: {\n      bazaarItems\n    }\n  };\n}\nexport default PersonalTable;","map":{"version":3,"sources":["C:/Users/rsale/Documents/SSB/components/personalTable.js"],"names":["React","Icon","Label","Menu","Table","advise","formatNumber","number","formatter","format","round","PersonalTable","bazaarItems","map","item","name","evolume","invested","eprofit","pprofit","gradient","getStaticProps","api_res","fetch","json","prettyNames_res","nameJson","items","Object","keys","key","buy_point","sell_point","item_cache","buy","sell","volume","svolume","buy_ema","sell_ema","pre_b_ema","pre_s_ema","pre_b","pre_s","k","push","time","Number","isNaN","props"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react'\r\nimport advise from './advise';\r\n\r\nfunction formatNumber(number) {\r\n    if (number >= 1000000) {\r\n        return formatter.format(round(number / 1000000, 2)) + 'M'\r\n    } else if (number >= 1000) {\r\n        return formatter.format(round(number / 1000, 2)) + 'K'\r\n    } else {\r\n        return round(number, 2)\r\n    }\r\n}\r\n  \r\n\r\n// posts will be populated at build time by getStaticProps()\r\nfunction PersonalTable({ bazaarItems }) {\r\n    return (\r\n        <Table celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Name</Table.HeaderCell>\r\n                    <Table.HeaderCell>Quantity</Table.HeaderCell>\r\n                    <Table.HeaderCell>Invested</Table.HeaderCell>\r\n                    <Table.HeaderCell>Estimated Profit</Table.HeaderCell>\r\n                    <Table.HeaderCell>Gradient</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {bazaarItems.map((item) => (\r\n                    <Table.Row>\r\n                        <Table.Cell>\r\n                            <Label ribbon>{item.name}</Label>\r\n                        </Table.Cell>\r\n                        <Table.Cell>{item.evolume} </Table.Cell>\r\n                        <Table.Cell>{item.invested}</Table.Cell>\r\n                        <Table.Cell>{formatNumber(item.eprofit)} ( {item.pprofit}% ) </Table.Cell>\r\n                        <Table.Cell>{item.gradient < 0 ? 'Product sell value decreasing' : 'Product sell value increasing'}</Table.Cell>\r\n                    </Table.Row>\r\n                ))}\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n  }\r\n\r\n\r\n  // This function gets called at build time on server-side.\r\n  // It won't be called on client-side, so you can even do\r\n  // direct database queries. See the \"Technical details\" section.\r\n  export async function getStaticProps() {\r\n    // Call an external API endpoint to get posts.\r\n    // You can use any data fetching library\r\n    \r\n    const api_res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=92e1a16e-382e-4840-b482-7966d24f2c1a`);\r\n    const json = await api_res.json();\r\n\r\n    const prettyNames_res = await fetch(`./prettyNames.json`);\r\n    const nameJson = await prettyNames_res.json();\r\n  \r\n    // By returning { props: posts }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n\r\n\r\n    \r\n    //console.log(json['products']['INK_SACK:3']['sell_summary'][0]['pricePerUnit']);\r\n\r\n    const items = Object.keys(json['products']).map(function (key) {\r\n        if(key === 'ENCHANTED_CARROT_ON_A_STICK') return {\r\n            'name': \"broken\",\r\n            'buy': 1,\r\n            'sell': 1,\r\n            'volume': 1,\r\n            'svolume': 1\r\n        }\r\n        return {\r\n            'name': nameJson[key]['name'],\r\n            'buy': json['products'][key]['sell_summary'][0]['pricePerUnit'],\r\n            'sell': json['products'][key]['buy_summary'][0]['pricePerUnit'],\r\n            'volume': json['products'][key]['quick_status']['buyMovingWeek'],\r\n            'svolume': json['products'][key]['quick_status']['sellMovingWeek']\r\n        }\r\n    });\r\n\r\n    const buy_point = [];\r\n    const sell_point = [];\r\n\r\n    for (const item of items) {\r\n        if (item.name === \"ENCHANTED_CARROT_ON_A_STICK\") continue;\r\n        //console.log(item.buy);\r\n        if (!item_cache[item.name]) {\r\n            item_cache[item.name] = {\r\n                buy: item.buy,\r\n                sell: item.sell,\r\n                volume: item.volume,\r\n                svolume: item.svolume,\r\n                buy_ema: item.buy,\r\n                sell_ema: item.sell\r\n            }\r\n        } else {\r\n            const pre_b_ema = item_cache[item.name].buy_ema;\r\n            const pre_s_ema = item_cache[item.name].sell_ema;\r\n            const pre_b = item_cache[item.name].buy;\r\n            const pre_s = item_cache[item.name].sell;\r\n\r\n            item_cache[item.name].buy = item.buy;\r\n            item_cache[item.name].sell = item.sell;\r\n            item_cache[item.name].volume = item.volume;\r\n            item_cache[item.name].svolume = item.svolume;\r\n            item_cache[item.name].buy_ema = item.buy * k + pre_b_ema * (1 - k);\r\n            item_cache[item.name].sell_ema = item.sell * k + pre_s_ema * (1 - k);\r\n\r\n            if ((pre_b <= pre_b_ema) && (item.buy > item_cache[item.name].buy_ema)) buy_point.push(item.name);\r\n            if ((pre_s >= pre_s_ema) && (item.sell < item_cache[item.name].sell_ema)) sell_point.push(item.name);\r\n        }\r\n    }\r\n\r\n    const time = 15\r\n\r\n    const bazaarItems = advise(100000, 6, Number.isNaN(time) ? 15 : time, false);\r\n\r\n    return {\r\n      props: {\r\n        bazaarItems,\r\n      },\r\n    }\r\n  }\r\n  \r\n  export default PersonalTable"]},"metadata":{},"sourceType":"module"}